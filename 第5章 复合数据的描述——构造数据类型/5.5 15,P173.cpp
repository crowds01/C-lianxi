/*用动态数组实现对键盘输入的数（个数不限）进行排序。*/
//解：对于这个问题，如果输入时先输入这些数的个数，然后再输入各个数，则可用下面的动态数组来表示这些数。

{
	int n;
	int* p;
	cin >> n;//输入需排序的个数
	p = new int[n];//创建一个动态一维数组
	for (int i = 0; i < n; i++) cin >> p[i];
	sort(p, n);//调用某个排序函数
	delete[]p;//撤销动态数组
}

/*如果输入时不能确定这些数的个数，而是先输入各个数，最后输入一个结束标记（如：-1），
这时，可以按以下方式实现：首先创建一个较小的动态数组用于存储输入的数，当这个数组放
不下输入的数时，在创建一个较大一些的动态数组，然后先把原来的数组中的数复制过来，再
把原来的数组撤销，在新数组中继续存储输入的数。上述操作可以重复多次。*/

{
	int max_len = 20;//动态数组的大小，初始化为20
	const int INCREMENT = 10;//用于改变数组大小的增量
	int count = 0,//对输入的数的个数进行计数
		n;//用于存储当前输入的数
	int* p = new int[max_len];//创建初始的动态数组
	cin >> n;//输入第一个数
	while (n != -1)
	{
		if (count >= max_len)//循环输入各个数，直到输入了-1为止
		{
			max_len += INCREMENT;
			int* q = new int[max_len];//创建较大的动态数组
			for (int i = 0; i < count; i++) q[i] = p[i];//转移已输入的数到新的数组中
			delete[]p;//撤销较小的数组
			p = q;//p指向新的、较大的数组
		}
		p[count] = n;//存储输入的数
		count++;//输入的数的个数加一
		cin >> n;//输入下一个数
	}
	sort(p, count);
	delete[]p;//撤销最后的动态数组
}